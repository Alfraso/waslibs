<Page
    x:Class="AppStudio.Samples.Common.ActionCommandBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="using:AppStudio.Samples.Common"
    xmlns:action="using:AppStudio.Common.Actions"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.BottomAppBar>
        <action:ActionsCommandBar ActionsSource="{Binding CommandActions}" Background="Gray" Foreground="Black" IsOpen="True"></action:ActionsCommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <StackPanel Margin="24,12,24,0">
            <StackPanel Orientation="Horizontal">
                <local:GoBackControl/>
                <TextBlock Text="ActionCommandBar" Style="{ThemeResource HeaderTextBlockStyle}"/>
            </StackPanel>
            <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Margin="0,12,0,0">
                <Run>ActionsCommandBar instance buttons from ActionsSource code behind property.</Run>
                <LineBreak/>
                <LineBreak/>
                <Run>It works on Runtime execution. You can Add Buttons with Label, name, Style, type, Command and command parameter.</Run>                
                <LineBreak/>
                <Run>Different AppBarButtons must have different labels.</Run>
            </TextBlock>
        </StackPanel>
    </Grid>
</Page>
